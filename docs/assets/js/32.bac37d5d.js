(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{457:function(e,t,a){"use strict";a.r(t);var i=a(62),r=Object(i.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"dumps-api-and-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dumps-api-and-cli"}},[e._v("#")]),e._v(" Dumps API and CLI")]),e._v(" "),a("h2",{attrs:{id:"_1-summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-summary"}},[e._v("#")]),e._v(" 1. Summary")]),e._v(" "),a("p",[e._v("A dump is a compressed file containing an export of a MeiliSearch instance. It contains all indexes, documents, settings, tasks, and API keys but in a raw unprocessed form. A dump isn't an exact copy of a databaseâ€”it is closer to a blueprint that allows creating of an identical dataset.")]),e._v(" "),a("h2",{attrs:{id:"_2-motivation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-motivation"}},[e._v("#")]),e._v(" 2. Motivation")]),e._v(" "),a("p",[e._v("The dumps exist to upgrade a MeiliSearch instance from a previous version to a more recent version. It can also be a helpful tool for loading a production state on a staging server to make changes and test them before propagating them to production.")]),e._v(" "),a("h2",{attrs:{id:"_3-functional-specification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-functional-specification"}},[e._v("#")]),e._v(" 3. Functional Specification")]),e._v(" "),a("h3",{attrs:{id:"_3-1-summary-key-points"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-summary-key-points"}},[e._v("#")]),e._v(" 3.1. Summary Key Points")]),e._v(" "),a("ul",[a("li",[e._v("A dump creation can be scheduled from the MeiliSearch API using the "),a("code",[e._v("POST - /dumps")]),e._v(" endpoint.")]),e._v(" "),a("li",[e._v("A dump creation status can be tracked using the "),a("code",[e._v("GET - /tasks/:task_uid")]),e._v(" endpoint.")]),e._v(" "),a("li",[e._v("MeiliSearch can only create one dump at a time.")]),e._v(" "),a("li",[e._v("By default, dumps are created in a folder named "),a("code",[e._v("dumps")]),e._v(", and can be found in the same directory as the MeiliSearch binary.")]),e._v(" "),a("li",[e._v("The "),a("code",[e._v("dumps")]),e._v(" directory can be customized using the "),a("code",[e._v("--dump-dir")]),e._v(" configuration option. If the dump directory does not already exist when the dump creation process is called, MeiliSearch will create it.")]),e._v(" "),a("li",[e._v("A "),a("code",[e._v(".dump")]),e._v(" file can be imported using the "),a("code",[e._v("--import-dump")]),e._v(" command-line flag.")]),e._v(" "),a("li",[e._v("The MeiliSearch server starts when the dump is fully imported and indexed.")]),e._v(" "),a("li",[e._v("By default, importing a dump when a database already exists (a non-empty data.ms folder in the same directory as the MeiliSearch binary) will stop the process and throw an error.")]),e._v(" "),a("li",[e._v("When using the command-line flag "),a("code",[e._v("--ignore-dump-if-db-exists=true")]),e._v(", MeiliSearch will use the existing database to start an instance instead of throwing an error. The dump will be ignored.")]),e._v(" "),a("li",[e._v("By default, trying to import a dump that does not exist, will stop the process and throw an error.")]),e._v(" "),a("li",[e._v("When using the command-line flag "),a("code",[e._v("--ignore-missing-dump")]),e._v(", MeiliSearch will continue its process and not throw an error.")]),e._v(" "),a("li",[e._v("When a dump is being imported, the http API is not available. Meilisearch can't receive read or write requests.")]),e._v(" "),a("li",[a("code",[e._v("dumpCreation")]),e._v(" task takes priority over enqueued "),a("code",[e._v("tasks")]),e._v(". This means that if a "),a("code",[e._v("dumpCreation")]),e._v(" task is created, it will be directly processed when the current processing task finishes even if other tasks have been enqueued before.")])]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"_3-2-dumps-api-definition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-dumps-api-definition"}},[e._v("#")]),e._v(" 3.2. Dumps API Definition")]),e._v(" "),a("h4",{attrs:{id:"_3-2-1-post-dumps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-post-dumps"}},[e._v("#")]),e._v(" 3.2.1. POST "),a("code",[e._v("/dumps")])]),e._v(" "),a("p",[e._v("Create a dump")]),e._v(" "),a("h5",{attrs:{id:"_3-2-1-1-body-payload"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-1-body-payload"}},[e._v("#")]),e._v(" 3.2.1.1. Body Payload")]),e._v(" "),a("p",[e._v("N/A")]),e._v(" "),a("h5",{attrs:{id:"_3-2-1-2-response-definition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-2-response-definition"}},[e._v("#")]),e._v(" 3.2.1.2. Response Definition")]),e._v(" "),a("p",[e._v("When the request is successful, Meilisearch returns the HTTP code "),a("code",[e._v("202 Accepted")]),e._v(". The response's content is the summarized representation of the received asynchronous task.")]),e._v(" "),a("p",[e._v("See "),a("RouterLink",{attrs:{to:"/specifications/text/0060-tasks-api.html#summarized-task-object-for-202-accepted"}},[e._v("Summarized "),a("code",[e._v("task")]),e._v(" Object for "),a("code",[e._v("202 Accepted")])]),e._v(".")],1),e._v(" "),a("p",[e._v("The uid of the generated dump can be found in the task details.")]),e._v(" "),a("h5",{attrs:{id:"_3-2-1-3-errors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-3-errors"}},[e._v("#")]),e._v(" 3.2.1.3. Errors")]),e._v(" "),a("ul",[a("li",[e._v("ðŸ”´ If Meilisearch is secured, accessing this route without the "),a("code",[e._v("Authorization")]),e._v(" header returns a "),a("RouterLink",{attrs:{to:"/specifications/text/0061-error-format-and-definitions.html#missing_authorization_header"}},[e._v("missing_authorization_header")]),e._v(" error.")],1),e._v(" "),a("li",[e._v("ðŸ”´ If Meilisearch is secured, accessing this route with a key that does not have permissions (i.e. other than the master-key) returns an "),a("RouterLink",{attrs:{to:"/specifications/text/0061-error-format-and-definitions.html#invalid_api_key"}},[e._v("invalid_api_key")]),e._v(" error.")],1)]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"_3-3-cli-definition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-cli-definition"}},[e._v("#")]),e._v(" 3.3. CLI Definition")]),e._v(" "),a("h4",{attrs:{id:"_3-3-1-dump-dir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-dump-dir"}},[e._v("#")]),e._v(" 3.3.1. "),a("code",[e._v("--dump-dir")])]),e._v(" "),a("p",[e._v("By default, MeiliSearch creates dumps in a directory called "),a("code",[e._v("dumps")]),e._v(" at the root of your MeiliSearch.")]),e._v(" "),a("p",[e._v("The destination can be modified with the "),a("code",[e._v("--dump-dir")]),e._v(" flag. e.g. "),a("code",[e._v("--dump-dir myDumps")])]),e._v(" "),a("h4",{attrs:{id:"_3-3-2-import-dump"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-import-dump"}},[e._v("#")]),e._v(" 3.3.2. "),a("code",[e._v("--import-dump")])]),e._v(" "),a("p",[e._v("Using the CLI flag "),a("code",[e._v("--import-dump")]),e._v(", MeiliSearch will replace the data.ms with the dump data and start the server using the provided dump. e.g. "),a("code",[e._v("--import-dump dumps/20220117-144855452.dump")]),e._v(".")]),e._v(" "),a("p",[e._v("If the "),a("code",[e._v("--import-dump")]),e._v(" flag is specified when a database exists, an error occurs in the CLI.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('Error: database already exists at ":pathToDataMs/data.ms", try to delete it or rename it\n')])])]),a("h4",{attrs:{id:"_3-3-3-ignore-dump-if-db-exists"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-3-ignore-dump-if-db-exists"}},[e._v("#")]),e._v(" 3.3.3. "),a("code",[e._v("--ignore-dump-if-db-exists")])]),e._v(" "),a("p",[e._v("To avoid MeiliSearch to throw an error when finding that a database already exists, the following flag: "),a("code",[e._v("--ignore-dump-if-db-exists")]),e._v(" can be used. When using this flag, MeiliSearch will use the existing database to start an instance instead of throwing an error. The dump will be ignored.")]),e._v(" "),a("h4",{attrs:{id:"_3-3-4-ignore-missing-dump"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-4-ignore-missing-dump"}},[e._v("#")]),e._v(" 3.3.4. "),a("code",[e._v("--ignore-missing-dump")])]),e._v(" "),a("p",[e._v("To avoid MeiliSearch to throw an error when there is no dump at the given path, the following flag: "),a("code",[e._v("--ignore-missing-dump")]),e._v(" can be used. MeiliSearch will then continue its process and not import any dump.")]),e._v(" "),a("p",[e._v("If the "),a("code",[e._v("--ignore-missing-dump")]),e._v(" flag is not specified and the file cannot be found, an error occurs in the CLI.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('Error: dump doesn\'t exist at ":pathToDumps/:missingFile"\n')])])]),a("h4",{attrs:{id:"_3-3-5-other-dump-related-errors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-5-other-dump-related-errors"}},[e._v("#")]),e._v(" 3.3.5 Other dump related errors")]),e._v(" "),a("p",[e._v("When starting a new Meilisearch version, if Meilisearch tries to read an old data.ms and but cannot read it, the following message should appear:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Error: Your database version (`:old_version`) is incompatible with your current engine (`:new_version`). To migrate data between Meilisearch versions, follow our guide on https://docs.meilisearch.com/learn/advanced/updating.html\n")])])]),a("hr"),e._v(" "),a("h3",{attrs:{id:"_3-4-dump-version-support"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-dump-version-support"}},[e._v("#")]),e._v(" 3.4. Dump version support")]),e._v(" "),a("p",[e._v("To handle dump and Meilisearch version compatibility, it is necessary to also versionize the dumps feature.")]),e._v(" "),a("p",[e._v("The following table describes which version of the dump correspond to which version of Meilisearch")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Dump version")]),e._v(" "),a("th",[e._v("Meilisearch version")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[a("code",[e._v("v1")])]),e._v(" "),a("td",[a("code",[e._v("v0.20.0")]),e._v(" and below")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("v2")])]),e._v(" "),a("td",[a("code",[e._v("v0.21.0")]),e._v(" and "),a("code",[e._v("v0.21.1")])])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("v3")])]),e._v(" "),a("td",[e._v("From "),a("code",[e._v("v0.22.0")]),e._v(" to "),a("code",[e._v("v0.24.0")]),e._v(" included")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("v4")])]),e._v(" "),a("td",[e._v("From "),a("code",[e._v("v0.25.0")]),e._v(" to "),a("code",[e._v("v0.27.2")]),e._v(" included")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("v5")])]),e._v(" "),a("td",[e._v("From "),a("code",[e._v("v0.28.0")]),e._v(" to "),a("code",[e._v("v0.29.1")]),e._v(" included")])]),e._v(" "),a("tr",[a("td",[a("code",[e._v("v6")])]),e._v(" "),a("td",[a("code",[e._v("v0.30.0")]),e._v(" and later")])])])]),e._v(" "),a("p",[e._v("All dumps created before and up to Meilisearch v1.0 can be imported into Meilisearch v1.X.Y.")]),e._v(" "),a("h2",{attrs:{id:"_4-technical-aspects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-technical-aspects"}},[e._v("#")]),e._v(" 4. Technical Aspects")]),e._v(" "),a("h3",{attrs:{id:"_4-1-dump-creation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-dump-creation"}},[e._v("#")]),e._v(" 4.1. Dump Creation")]),e._v(" "),a("p",[e._v("When a dump is being created, the task queue can receive other future operations to perform.")]),e._v(" "),a("h3",{attrs:{id:"_4-2-importing-a-dump"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-importing-a-dump"}},[e._v("#")]),e._v(" 4.2. Importing a dump")]),e._v(" "),a("p",[e._v("When a dump is being imported, the http API is not available. Meilisearch can't receive read or write requests.")]),e._v(" "),a("h3",{attrs:{id:"_4-3-dump-creation-task-priority"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-dump-creation-task-priority"}},[e._v("#")]),e._v(" 4.3. Dump Creation Task Priority")]),e._v(" "),a("p",[e._v("Dump creation tasks have priority over other task types. If a "),a("code",[e._v("dumpCreation")]),e._v(" task is enqueued, it will be directly processed when the current processing task finishes even if other tasks have been enqueued before.")]),e._v(" "),a("h2",{attrs:{id:"_5-future-possibilities"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-future-possibilities"}},[e._v("#")]),e._v(" 5. Future Possibilities")]),e._v(" "),a("ul",[a("li",[e._v("Give information about the import of a dump within the tasks.")])])])}),[],!1,null,null,null);t.default=r.exports}}]);